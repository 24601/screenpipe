name: Release

on:
  push:
    tags:
      - "v*.*.*"

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, macos-latest-arm64]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: Build
        run: cargo build --release

      - name: Check if Release Exists
        id: check_release
        run: |
          if gh release view ${{ github.ref }}; then
            echo "Release already exists"
            exit 0
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}

      - name: Create Release
        if: steps.check_release.outputs.release_exists == 'false'
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: target/release/screenpipe
          asset_name: screenpipe-${{ matrix.os }}
          asset_content_type: application/octet-stream
