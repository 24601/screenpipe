# act -W .github/workflows/benchmark.yml --container-architecture linux/amd64 -j benchmark -P ubuntu-latest=catthehacker/ubuntu:act-latest

name: Rust Benchmark

on: [push]

env:
  CARGO_TERM_COLOR: always

jobs:
  benchmark_pcm:
    name: Run PCM benchmark
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libavformat-dev libavfilter-dev libavdevice-dev ffmpeg libasound2-dev

      - name: Run PCM benchmarks
        run: |
          cargo bench --bench pcm_decode_benchmark -- --output-format bencher | tee pcm_output.txt

      - name: Store PCM benchmark result
        uses: benchmark-action/github-action-benchmark@v1
        with:
          name: PCM Benchmark
          tool: "cargo"
          output-file-path: pcm_output.txt
          external-data-json-path: ./cache/pcm-benchmark-data.json
          github-token: ${{ secrets.GITHUB_TOKEN }}
          auto-push: false
          comment-always: false
          save-data-file: true

      - name: Upload PCM benchmark artifact
        uses: actions/upload-artifact@v3
        with:
          name: pcm-benchmark-data
          path: ./cache/pcm-benchmark-data.json

  apple_ocr_benchmark:
    name: Run Apple OCR benchmark
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable

      - name: Install dependencies
        run: |
          brew install ffmpeg

      - name: Run OCR benchmarks
        env:
          DYLD_LIBRARY_PATH: ${{ github.workspace }}/screenpipe-vision/lib:${{ env.DYLD_LIBRARY_PATH }}
        run: |
          cargo bench --bench ocr_benchmark -- --output-format bencher | tee ocr_output.txt

      - name: Store OCR benchmark result
        uses: benchmark-action/github-action-benchmark@v1
        with:
          name: Apple OCR Benchmark
          tool: "cargo"
          output-file-path: ocr_output.txt
          external-data-json-path: ./cache/apple-ocr-benchmark-data.json
          github-token: ${{ secrets.GITHUB_TOKEN }}
          auto-push: false
          comment-always: false
          save-data-file: true

      - name: Upload Apple OCR benchmark artifact
        uses: actions/upload-artifact@v3
        with:
          name: apple-ocr-benchmark-data
          path: ./cache/apple-ocr-benchmark-data.json

  tesseract_ocr_benchmark:
    name: Run Tesseract OCR benchmark
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libleptonica-dev libtesseract-dev tesseract-ocr-eng

      - name: Run Tesseract OCR benchmarks
        run: |
          cargo bench --bench ocr_benchmark -- --output-format bencher | tee tesseract_ocr_output.txt

      - name: Store Tesseract OCR benchmark result
        uses: benchmark-action/github-action-benchmark@v1
        with:
          name: Tesseract OCR Benchmark
          tool: "cargo"
          output-file-path: tesseract_ocr_output.txt
          external-data-json-path: ./cache/tesseract-ocr-benchmark-data.json
          github-token: ${{ secrets.GITHUB_TOKEN }}
          auto-push: false
          comment-always: false
          save-data-file: true

      - name: Upload Tesseract OCR benchmark artifact
        uses: actions/upload-artifact@v3
        with:
          name: tesseract-ocr-benchmark-data
          path: ./cache/tesseract-ocr-benchmark-data.json

  windows_ocr_benchmark:
    name: Run Windows OCR benchmark
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable

      - name: Run Windows OCR benchmarks
        run: |
          cargo bench --bench ocr_benchmark -- --output-format bencher | Tee-Object -FilePath windows_ocr_output.txt

      - name: Store Windows OCR benchmark result
        uses: benchmark-action/github-action-benchmark@v1
        with:
          name: Windows OCR Benchmark
          tool: "cargo"
          output-file-path: windows_ocr_output.txt
          external-data-json-path: ./cache/windows-ocr-benchmark-data.json
          github-token: ${{ secrets.GITHUB_TOKEN }}
          auto-push: false
          comment-always: false
          save-data-file: true

      - name: Upload Windows OCR benchmark artifact
        uses: actions/upload-artifact@v3
        with:
          name: windows-ocr-benchmark-data
          path: ./cache/windows-ocr-benchmark-data.json

  analyze_benchmarks:
    needs:
      [
        benchmark_pcm,
        apple_ocr_benchmark,
        tesseract_ocr_benchmark,
        windows_ocr_benchmark,
      ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Download benchmark data
        uses: actions/download-artifact@v3
        with:
          path: ./cache

      - name: List contents of cache directory
        run: ls -R ./cache

      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3
        with:
          limit-access-to-actor: true

      - name: Analyze benchmarks
        uses: benchmark-action/github-action-benchmark@v1
        with:
          tool: "cargo"
          output-file-path: |
            ./cache/pcm-benchmark-data/pcm-benchmark-data.json
            ./cache/apple-ocr-benchmark-data/apple-ocr-benchmark-data.json
            ./cache/tesseract-ocr-benchmark-data/tesseract-ocr-benchmark-data.json
            ./cache/windows-ocr-benchmark-data/windows-ocr-benchmark-data.json
          github-token: ${{ secrets.GITHUB_TOKEN }}
          auto-push: true
          comment-on-alert: true
          fail-on-alert: true
          alert-threshold: "200%"
          comment-always: true
          alert-comment-cc-users: "@louis030195"
